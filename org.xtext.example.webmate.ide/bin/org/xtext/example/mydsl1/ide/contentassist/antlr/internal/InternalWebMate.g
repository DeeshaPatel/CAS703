/*
 * generated by Xtext 2.30.0
 */
grammar InternalWebMate;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.example.mydsl1.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.mydsl1.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.mydsl1.services.WebMateGrammarAccess;

}
@parser::members {
	private WebMateGrammarAccess grammarAccess;

	public void setGrammarAccess(WebMateGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleHTML
entryRuleHTML
:
{ before(grammarAccess.getHTMLRule()); }
	 ruleHTML
{ after(grammarAccess.getHTMLRule()); } 
	 EOF 
;

// Rule HTML
ruleHTML 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHTMLAccess().getGroup()); }
		(rule__HTML__Group__0)
		{ after(grammarAccess.getHTMLAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAbbreviation
entryRuleAbbreviation
:
{ before(grammarAccess.getAbbreviationRule()); }
	 ruleAbbreviation
{ after(grammarAccess.getAbbreviationRule()); } 
	 EOF 
;

// Rule Abbreviation
ruleAbbreviation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAbbreviationAccess().getGroup()); }
		(rule__Abbreviation__Group__0)
		{ after(grammarAccess.getAbbreviationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleID0
entryRuleID0
:
{ before(grammarAccess.getID0Rule()); }
	 ruleID0
{ after(grammarAccess.getID0Rule()); } 
	 EOF 
;

// Rule ID0
ruleID0 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getID0Access().getGroup()); }
		(rule__ID0__Group__0)
		{ after(grammarAccess.getID0Access().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSymbol
entryRuleSymbol
:
{ before(grammarAccess.getSymbolRule()); }
	 ruleSymbol
{ after(grammarAccess.getSymbolRule()); } 
	 EOF 
;

// Rule Symbol
ruleSymbol 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSymbolAccess().getAlternatives()); }
		(rule__Symbol__Alternatives)
		{ after(grammarAccess.getSymbolAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTag
entryRuleTag
:
{ before(grammarAccess.getTagRule()); }
	 ruleTag
{ after(grammarAccess.getTagRule()); } 
	 EOF 
;

// Rule Tag
ruleTag 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTagAccess().getGroup()); }
		(rule__Tag__Group__0)
		{ after(grammarAccess.getTagAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleClass
entryRuleClass
:
{ before(grammarAccess.getClassRule()); }
	 ruleClass
{ after(grammarAccess.getClassRule()); } 
	 EOF 
;

// Rule Class
ruleClass 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getClassAccess().getGroup()); }
		(rule__Class__Group__0)
		{ after(grammarAccess.getClassAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttribute
entryRuleAttribute
:
{ before(grammarAccess.getAttributeRule()); }
	 ruleAttribute
{ after(grammarAccess.getAttributeRule()); } 
	 EOF 
;

// Rule Attribute
ruleAttribute 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttributeAccess().getGroup()); }
		(rule__Attribute__Group__0)
		{ after(grammarAccess.getAttributeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGroup
entryRuleGroup
:
{ before(grammarAccess.getGroupRule()); }
	 ruleGroup
{ after(grammarAccess.getGroupRule()); } 
	 EOF 
;

// Rule Group
ruleGroup 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGroupAccess().getGroup()); }
		(rule__Group__Group__0)
		{ after(grammarAccess.getGroupAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEString
entryRuleEString
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEStringAccess().getAlternatives()); }
		(rule__EString__Alternatives)
		{ after(grammarAccess.getEStringAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEInt
entryRuleEInt
:
{ before(grammarAccess.getEIntRule()); }
	 ruleEInt
{ after(grammarAccess.getEIntRule()); } 
	 EOF 
;

// Rule EInt
ruleEInt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEIntAccess().getGroup()); }
		(rule__EInt__Group__0)
		{ after(grammarAccess.getEIntAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule HTMLTag
ruleHTMLTag
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHTMLTagAccess().getAlternatives()); }
		(rule__HTMLTag__Alternatives)
		{ after(grammarAccess.getHTMLTagAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule SYM
ruleSYM
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSYMAccess().getAlternatives()); }
		(rule__SYM__Alternatives)
		{ after(grammarAccess.getSYMAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Abbreviation__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbbreviationAccess().getAbbreviationAssignment_2_0()); }
		(rule__Abbreviation__AbbreviationAssignment_2_0)*
		{ after(grammarAccess.getAbbreviationAccess().getAbbreviationAssignment_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getAbbreviationAccess().getGroup_2_1()); }
		(rule__Abbreviation__Group_2_1__0)
		{ after(grammarAccess.getAbbreviationAccess().getGroup_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Symbol__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSymbolAccess().getGroup_0()); }
		(rule__Symbol__Group_0__0)
		{ after(grammarAccess.getSymbolAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getSymbolAccess().getGroup_1()); }
		(rule__Symbol__Group_1__0)
		{ after(grammarAccess.getSymbolAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
		RULE_ID
		{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HTMLTag__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHTMLTagAccess().getDivEnumLiteralDeclaration_0()); }
		('div')
		{ after(grammarAccess.getHTMLTagAccess().getDivEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getHTMLTagAccess().getH1EnumLiteralDeclaration_1()); }
		('h1')
		{ after(grammarAccess.getHTMLTagAccess().getH1EnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getHTMLTagAccess().getPEnumLiteralDeclaration_2()); }
		('p')
		{ after(grammarAccess.getHTMLTagAccess().getPEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getHTMLTagAccess().getUlEnumLiteralDeclaration_3()); }
		('ul')
		{ after(grammarAccess.getHTMLTagAccess().getUlEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getHTMLTagAccess().getLiEnumLiteralDeclaration_4()); }
		('li')
		{ after(grammarAccess.getHTMLTagAccess().getLiEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getHTMLTagAccess().getAEnumLiteralDeclaration_5()); }
		('a')
		{ after(grammarAccess.getHTMLTagAccess().getAEnumLiteralDeclaration_5()); }
	)
	|
	(
		{ before(grammarAccess.getHTMLTagAccess().getImgEnumLiteralDeclaration_6()); }
		('img')
		{ after(grammarAccess.getHTMLTagAccess().getImgEnumLiteralDeclaration_6()); }
	)
	|
	(
		{ before(grammarAccess.getHTMLTagAccess().getFormEnumLiteralDeclaration_7()); }
		('form')
		{ after(grammarAccess.getHTMLTagAccess().getFormEnumLiteralDeclaration_7()); }
	)
	|
	(
		{ before(grammarAccess.getHTMLTagAccess().getInputEnumLiteralDeclaration_8()); }
		('input')
		{ after(grammarAccess.getHTMLTagAccess().getInputEnumLiteralDeclaration_8()); }
	)
	|
	(
		{ before(grammarAccess.getHTMLTagAccess().getButtonEnumLiteralDeclaration_9()); }
		('button')
		{ after(grammarAccess.getHTMLTagAccess().getButtonEnumLiteralDeclaration_9()); }
	)
	|
	(
		{ before(grammarAccess.getHTMLTagAccess().getOptionEnumLiteralDeclaration_10()); }
		('option')
		{ after(grammarAccess.getHTMLTagAccess().getOptionEnumLiteralDeclaration_10()); }
	)
	|
	(
		{ before(grammarAccess.getHTMLTagAccess().getSelectEnumLiteralDeclaration_11()); }
		('select')
		{ after(grammarAccess.getHTMLTagAccess().getSelectEnumLiteralDeclaration_11()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SYM__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSYMAccess().getPLUSEnumLiteralDeclaration_0()); }
		('+')
		{ after(grammarAccess.getSYMAccess().getPLUSEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getSYMAccess().getMULTIPLYEnumLiteralDeclaration_1()); }
		('*')
		{ after(grammarAccess.getSYMAccess().getMULTIPLYEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getSYMAccess().getGREATEREnumLiteralDeclaration_2()); }
		('>')
		{ after(grammarAccess.getSYMAccess().getGREATEREnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HTML__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HTML__Group__0__Impl
	rule__HTML__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HTML__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHTMLAccess().getHTMLAction_0()); }
	()
	{ after(grammarAccess.getHTMLAccess().getHTMLAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HTML__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HTML__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HTML__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getHTMLAccess().getAbbreviationAssignment_1()); }
		(rule__HTML__AbbreviationAssignment_1)
		{ after(grammarAccess.getHTMLAccess().getAbbreviationAssignment_1()); }
	)
	(
		{ before(grammarAccess.getHTMLAccess().getAbbreviationAssignment_1()); }
		(rule__HTML__AbbreviationAssignment_1)*
		{ after(grammarAccess.getHTMLAccess().getAbbreviationAssignment_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Abbreviation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Abbreviation__Group__0__Impl
	rule__Abbreviation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Abbreviation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbbreviationAccess().getAbbreviationAction_0()); }
	()
	{ after(grammarAccess.getAbbreviationAccess().getAbbreviationAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Abbreviation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Abbreviation__Group__1__Impl
	rule__Abbreviation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Abbreviation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbbreviationAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getAbbreviationAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Abbreviation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Abbreviation__Group__2__Impl
	rule__Abbreviation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Abbreviation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbbreviationAccess().getAlternatives_2()); }
	(rule__Abbreviation__Alternatives_2)
	{ after(grammarAccess.getAbbreviationAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Abbreviation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Abbreviation__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Abbreviation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbbreviationAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getAbbreviationAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Abbreviation__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Abbreviation__Group_2_1__0__Impl
	rule__Abbreviation__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Abbreviation__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getAbbreviationAccess().getTagsAssignment_2_1_0()); }
		(rule__Abbreviation__TagsAssignment_2_1_0)
		{ after(grammarAccess.getAbbreviationAccess().getTagsAssignment_2_1_0()); }
	)
	(
		{ before(grammarAccess.getAbbreviationAccess().getTagsAssignment_2_1_0()); }
		(rule__Abbreviation__TagsAssignment_2_1_0)*
		{ after(grammarAccess.getAbbreviationAccess().getTagsAssignment_2_1_0()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Abbreviation__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Abbreviation__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Abbreviation__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbbreviationAccess().getGroup_2_1_1()); }
	(rule__Abbreviation__Group_2_1_1__0)
	{ after(grammarAccess.getAbbreviationAccess().getGroup_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Abbreviation__Group_2_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Abbreviation__Group_2_1_1__0__Impl
	rule__Abbreviation__Group_2_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Abbreviation__Group_2_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbbreviationAccess().getIdsAssignment_2_1_1_0()); }
	(rule__Abbreviation__IdsAssignment_2_1_1_0)*
	{ after(grammarAccess.getAbbreviationAccess().getIdsAssignment_2_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Abbreviation__Group_2_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Abbreviation__Group_2_1_1__1__Impl
	rule__Abbreviation__Group_2_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Abbreviation__Group_2_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbbreviationAccess().getSymbolsAssignment_2_1_1_1()); }
	(rule__Abbreviation__SymbolsAssignment_2_1_1_1)*
	{ after(grammarAccess.getAbbreviationAccess().getSymbolsAssignment_2_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Abbreviation__Group_2_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Abbreviation__Group_2_1_1__2__Impl
	rule__Abbreviation__Group_2_1_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Abbreviation__Group_2_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbbreviationAccess().getClassesAssignment_2_1_1_2()); }
	(rule__Abbreviation__ClassesAssignment_2_1_1_2)*
	{ after(grammarAccess.getAbbreviationAccess().getClassesAssignment_2_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Abbreviation__Group_2_1_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Abbreviation__Group_2_1_1__3__Impl
	rule__Abbreviation__Group_2_1_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Abbreviation__Group_2_1_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbbreviationAccess().getAttributesAssignment_2_1_1_3()); }
	(rule__Abbreviation__AttributesAssignment_2_1_1_3)*
	{ after(grammarAccess.getAbbreviationAccess().getAttributesAssignment_2_1_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Abbreviation__Group_2_1_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Abbreviation__Group_2_1_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Abbreviation__Group_2_1_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbbreviationAccess().getGroupAssignment_2_1_1_4()); }
	(rule__Abbreviation__GroupAssignment_2_1_1_4)*
	{ after(grammarAccess.getAbbreviationAccess().getGroupAssignment_2_1_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ID0__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ID0__Group__0__Impl
	rule__ID0__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ID0__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getID0Access().getIDAction_0()); }
	()
	{ after(grammarAccess.getID0Access().getIDAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ID0__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ID0__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ID0__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getID0Access().getGroup_1()); }
	(rule__ID0__Group_1__0)
	{ after(grammarAccess.getID0Access().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ID0__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ID0__Group_1__0__Impl
	rule__ID0__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ID0__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getID0Access().getNumberSignKeyword_1_0()); }
	'#'
	{ after(grammarAccess.getID0Access().getNumberSignKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ID0__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ID0__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ID0__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getID0Access().getIdNameAssignment_1_1()); }
	(rule__ID0__IdNameAssignment_1_1)
	{ after(grammarAccess.getID0Access().getIdNameAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Symbol__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Symbol__Group_0__0__Impl
	rule__Symbol__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Symbol__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSymbolAccess().getSymbolAction_0_0()); }
	()
	{ after(grammarAccess.getSymbolAccess().getSymbolAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Symbol__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Symbol__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Symbol__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSymbolAccess().getGroup_0_1()); }
	(rule__Symbol__Group_0_1__0)
	{ after(grammarAccess.getSymbolAccess().getGroup_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Symbol__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Symbol__Group_0_1__0__Impl
	rule__Symbol__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Symbol__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSymbolAccess().getSymAssignment_0_1_0()); }
	(rule__Symbol__SymAssignment_0_1_0)
	{ after(grammarAccess.getSymbolAccess().getSymAssignment_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Symbol__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Symbol__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Symbol__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSymbolAccess().getCountAssignment_0_1_1()); }
	(rule__Symbol__CountAssignment_0_1_1)
	{ after(grammarAccess.getSymbolAccess().getCountAssignment_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Symbol__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Symbol__Group_1__0__Impl
	rule__Symbol__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Symbol__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSymbolAccess().getSymAssignment_1_0()); }
	(rule__Symbol__SymAssignment_1_0)
	{ after(grammarAccess.getSymbolAccess().getSymAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Symbol__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Symbol__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Symbol__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSymbolAccess().getTagAssignment_1_1()); }
	(rule__Symbol__TagAssignment_1_1)
	{ after(grammarAccess.getSymbolAccess().getTagAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Tag__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Tag__Group__0__Impl
	rule__Tag__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Tag__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTagAccess().getTagAction_0()); }
	()
	{ after(grammarAccess.getTagAccess().getTagAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tag__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Tag__Group__1__Impl
	rule__Tag__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Tag__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTagAccess().getTagNameAssignment_1()); }
	(rule__Tag__TagNameAssignment_1)
	{ after(grammarAccess.getTagAccess().getTagNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tag__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Tag__Group__2__Impl
	rule__Tag__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Tag__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTagAccess().getClassAssignment_2()); }
	(rule__Tag__ClassAssignment_2)*
	{ after(grammarAccess.getTagAccess().getClassAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tag__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Tag__Group__3__Impl
	rule__Tag__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Tag__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTagAccess().getIdAssignment_3()); }
	(rule__Tag__IdAssignment_3)?
	{ after(grammarAccess.getTagAccess().getIdAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tag__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Tag__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Tag__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTagAccess().getAttributeAssignment_4()); }
	(rule__Tag__AttributeAssignment_4)*
	{ after(grammarAccess.getTagAccess().getAttributeAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Class__Group__0__Impl
	rule__Class__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassAccess().getClassAction_0()); }
	()
	{ after(grammarAccess.getClassAccess().getClassAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Class__Group__1__Impl
	rule__Class__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassAccess().getFullStopKeyword_1()); }
	'.'
	{ after(grammarAccess.getClassAccess().getFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Class__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassAccess().getClassNameAssignment_2()); }
	(rule__Class__ClassNameAssignment_2)
	{ after(grammarAccess.getClassAccess().getClassNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__0__Impl
	rule__Attribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getAttributeAction_0()); }
	()
	{ after(grammarAccess.getAttributeAccess().getAttributeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getGroup_1()); }
	(rule__Attribute__Group_1__0)
	{ after(grammarAccess.getAttributeAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group_1__0__Impl
	rule__Attribute__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getLeftSquareBracketKeyword_1_0()); }
	'['
	{ after(grammarAccess.getAttributeAccess().getLeftSquareBracketKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group_1__1__Impl
	rule__Attribute__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getAttributeNameAssignment_1_1()); }
	(rule__Attribute__AttributeNameAssignment_1_1)
	{ after(grammarAccess.getAttributeAccess().getAttributeNameAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group_1__2__Impl
	rule__Attribute__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getGroup_1_2()); }
	(rule__Attribute__Group_1_2__0)?
	{ after(grammarAccess.getAttributeAccess().getGroup_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getRightSquareBracketKeyword_1_3()); }
	']'
	{ after(grammarAccess.getAttributeAccess().getRightSquareBracketKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group_1_2__0__Impl
	rule__Attribute__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getEqualsSignKeyword_1_2_0()); }
	'='
	{ after(grammarAccess.getAttributeAccess().getEqualsSignKeyword_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getAttributeValueAssignment_1_2_1()); }
	(rule__Attribute__AttributeValueAssignment_1_2_1)
	{ after(grammarAccess.getAttributeAccess().getAttributeValueAssignment_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Group__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Group__Group__0__Impl
	rule__Group__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGroupAccess().getGroupAction_0()); }
	()
	{ after(grammarAccess.getGroupAccess().getGroupAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Group__Group__1__Impl
	rule__Group__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGroupAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getGroupAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Group__Group__2__Impl
	rule__Group__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getGroupAccess().getAbbreviationAssignment_2()); }
		(rule__Group__AbbreviationAssignment_2)
		{ after(grammarAccess.getGroupAccess().getAbbreviationAssignment_2()); }
	)
	(
		{ before(grammarAccess.getGroupAccess().getAbbreviationAssignment_2()); }
		(rule__Group__AbbreviationAssignment_2)*
		{ after(grammarAccess.getGroupAccess().getAbbreviationAssignment_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Group__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGroupAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getGroupAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EInt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EInt__Group__0__Impl
	rule__EInt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); }
	('-')?
	{ after(grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EInt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); }
	RULE_INT
	{ after(grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__HTML__AbbreviationAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHTMLAccess().getAbbreviationAbbreviationParserRuleCall_1_0()); }
		ruleAbbreviation
		{ after(grammarAccess.getHTMLAccess().getAbbreviationAbbreviationParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Abbreviation__AbbreviationAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbbreviationAccess().getAbbreviationAbbreviationCrossReference_2_0_0()); }
		(
			{ before(grammarAccess.getAbbreviationAccess().getAbbreviationAbbreviationEStringParserRuleCall_2_0_0_1()); }
			ruleEString
			{ after(grammarAccess.getAbbreviationAccess().getAbbreviationAbbreviationEStringParserRuleCall_2_0_0_1()); }
		)
		{ after(grammarAccess.getAbbreviationAccess().getAbbreviationAbbreviationCrossReference_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Abbreviation__TagsAssignment_2_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbbreviationAccess().getTagsTagParserRuleCall_2_1_0_0()); }
		ruleTag
		{ after(grammarAccess.getAbbreviationAccess().getTagsTagParserRuleCall_2_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Abbreviation__IdsAssignment_2_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbbreviationAccess().getIdsID0ParserRuleCall_2_1_1_0_0()); }
		ruleID0
		{ after(grammarAccess.getAbbreviationAccess().getIdsID0ParserRuleCall_2_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Abbreviation__SymbolsAssignment_2_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbbreviationAccess().getSymbolsSymbolParserRuleCall_2_1_1_1_0()); }
		ruleSymbol
		{ after(grammarAccess.getAbbreviationAccess().getSymbolsSymbolParserRuleCall_2_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Abbreviation__ClassesAssignment_2_1_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbbreviationAccess().getClassesClassParserRuleCall_2_1_1_2_0()); }
		ruleClass
		{ after(grammarAccess.getAbbreviationAccess().getClassesClassParserRuleCall_2_1_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Abbreviation__AttributesAssignment_2_1_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbbreviationAccess().getAttributesAttributeParserRuleCall_2_1_1_3_0()); }
		ruleAttribute
		{ after(grammarAccess.getAbbreviationAccess().getAttributesAttributeParserRuleCall_2_1_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Abbreviation__GroupAssignment_2_1_1_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbbreviationAccess().getGroupGroupParserRuleCall_2_1_1_4_0()); }
		ruleGroup
		{ after(grammarAccess.getAbbreviationAccess().getGroupGroupParserRuleCall_2_1_1_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ID0__IdNameAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getID0Access().getIdNameEStringParserRuleCall_1_1_0()); }
		ruleEString
		{ after(grammarAccess.getID0Access().getIdNameEStringParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Symbol__SymAssignment_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSymbolAccess().getSymSYMEnumRuleCall_0_1_0_0()); }
		ruleSYM
		{ after(grammarAccess.getSymbolAccess().getSymSYMEnumRuleCall_0_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Symbol__CountAssignment_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSymbolAccess().getCountEIntParserRuleCall_0_1_1_0()); }
		ruleEInt
		{ after(grammarAccess.getSymbolAccess().getCountEIntParserRuleCall_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Symbol__SymAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSymbolAccess().getSymSYMEnumRuleCall_1_0_0()); }
		ruleSYM
		{ after(grammarAccess.getSymbolAccess().getSymSYMEnumRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Symbol__TagAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSymbolAccess().getTagTagParserRuleCall_1_1_0()); }
		ruleTag
		{ after(grammarAccess.getSymbolAccess().getTagTagParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tag__TagNameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTagAccess().getTagNameHTMLTagEnumRuleCall_1_0()); }
		ruleHTMLTag
		{ after(grammarAccess.getTagAccess().getTagNameHTMLTagEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tag__ClassAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTagAccess().getClassClassParserRuleCall_2_0()); }
		ruleClass
		{ after(grammarAccess.getTagAccess().getClassClassParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tag__IdAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTagAccess().getIdID0ParserRuleCall_3_0()); }
		ruleID0
		{ after(grammarAccess.getTagAccess().getIdID0ParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tag__AttributeAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTagAccess().getAttributeAttributeParserRuleCall_4_0()); }
		ruleAttribute
		{ after(grammarAccess.getTagAccess().getAttributeAttributeParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__ClassNameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassAccess().getClassNameEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getClassAccess().getClassNameEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__AttributeNameAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getAttributeNameEStringParserRuleCall_1_1_0()); }
		ruleEString
		{ after(grammarAccess.getAttributeAccess().getAttributeNameEStringParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__AttributeValueAssignment_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getAttributeValueEStringParserRuleCall_1_2_1_0()); }
		ruleEString
		{ after(grammarAccess.getAttributeAccess().getAttributeValueEStringParserRuleCall_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__AbbreviationAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGroupAccess().getAbbreviationAbbreviationParserRuleCall_2_0()); }
		ruleAbbreviation
		{ after(grammarAccess.getGroupAccess().getAbbreviationAbbreviationParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_INT : ('0'..'9')+;

RULE_STRING : ('a'..'z'|'A'..'Z'|'_'|'+'|'>'|'^'|'*') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
