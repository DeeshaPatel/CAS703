/*
 * generated by Xtext 2.30.0
 */
package org.xtext.example.mydsl.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class WebMateGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class EmmetElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.WebMate.Emmet");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEmmetKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cAbbreviationKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cAbbreviationAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cAbbreviationAbbreviationParserRuleCall_4_0 = (RuleCall)cAbbreviationAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cCommaKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cAbbreviationAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cAbbreviationAbbreviationParserRuleCall_5_1_0 = (RuleCall)cAbbreviationAssignment_5_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Emmet returns Emmet:
		//    'Emmet'
		//    '{'
		//        'abbreviation' '{' abbreviation+=Abbreviation ( "," abbreviation+=Abbreviation)* '}'
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Emmet'
		//'{'
		//    'abbreviation' '{' abbreviation+=Abbreviation ( "," abbreviation+=Abbreviation)* '}'
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Emmet'
		public Keyword getEmmetKeyword_0() { return cEmmetKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'abbreviation'
		public Keyword getAbbreviationKeyword_2() { return cAbbreviationKeyword_2; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//abbreviation+=Abbreviation
		public Assignment getAbbreviationAssignment_4() { return cAbbreviationAssignment_4; }
		
		//Abbreviation
		public RuleCall getAbbreviationAbbreviationParserRuleCall_4_0() { return cAbbreviationAbbreviationParserRuleCall_4_0; }
		
		//( "," abbreviation+=Abbreviation)*
		public Group getGroup_5() { return cGroup_5; }
		
		//","
		public Keyword getCommaKeyword_5_0() { return cCommaKeyword_5_0; }
		
		//abbreviation+=Abbreviation
		public Assignment getAbbreviationAssignment_5_1() { return cAbbreviationAssignment_5_1; }
		
		//Abbreviation
		public RuleCall getAbbreviationAbbreviationParserRuleCall_5_1_0() { return cAbbreviationAbbreviationParserRuleCall_5_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class AbbreviationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.WebMate.Abbreviation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cAbbreviationAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cAbbreviationKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cPrefixKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cPrefixAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cPrefixPrefixParserRuleCall_3_1_0 = (RuleCall)cPrefixAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cElementKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cElementAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cElementElementParserRuleCall_4_2_0 = (RuleCall)cElementAssignment_4_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cElementAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final RuleCall cElementElementParserRuleCall_4_3_1_0 = (RuleCall)cElementAssignment_4_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cSuffixKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cSuffixAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cSuffixSuffixParserRuleCall_5_1_0 = (RuleCall)cSuffixAssignment_5_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Abbreviation returns Abbreviation:
		//    {Abbreviation}
		//    'Abbreviation'
		//    '{'
		//        ('prefix' prefix=Prefix)?
		//        ('element' '{' element+=Element ( "," element+=Element)* '}' )?
		//        ('suffix' suffix=Suffix)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Abbreviation}
		//'Abbreviation'
		//'{'
		//    ('prefix' prefix=Prefix)?
		//    ('element' '{' element+=Element ( "," element+=Element)* '}' )?
		//    ('suffix' suffix=Suffix)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{Abbreviation}
		public Action getAbbreviationAction_0() { return cAbbreviationAction_0; }
		
		//'Abbreviation'
		public Keyword getAbbreviationKeyword_1() { return cAbbreviationKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('prefix' prefix=Prefix)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'prefix'
		public Keyword getPrefixKeyword_3_0() { return cPrefixKeyword_3_0; }
		
		//prefix=Prefix
		public Assignment getPrefixAssignment_3_1() { return cPrefixAssignment_3_1; }
		
		//Prefix
		public RuleCall getPrefixPrefixParserRuleCall_3_1_0() { return cPrefixPrefixParserRuleCall_3_1_0; }
		
		//('element' '{' element+=Element ( "," element+=Element)* '}' )?
		public Group getGroup_4() { return cGroup_4; }
		
		//'element'
		public Keyword getElementKeyword_4_0() { return cElementKeyword_4_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_1() { return cLeftCurlyBracketKeyword_4_1; }
		
		//element+=Element
		public Assignment getElementAssignment_4_2() { return cElementAssignment_4_2; }
		
		//Element
		public RuleCall getElementElementParserRuleCall_4_2_0() { return cElementElementParserRuleCall_4_2_0; }
		
		//( "," element+=Element)*
		public Group getGroup_4_3() { return cGroup_4_3; }
		
		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }
		
		//element+=Element
		public Assignment getElementAssignment_4_3_1() { return cElementAssignment_4_3_1; }
		
		//Element
		public RuleCall getElementElementParserRuleCall_4_3_1_0() { return cElementElementParserRuleCall_4_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4_4() { return cRightCurlyBracketKeyword_4_4; }
		
		//('suffix' suffix=Suffix)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'suffix'
		public Keyword getSuffixKeyword_5_0() { return cSuffixKeyword_5_0; }
		
		//suffix=Suffix
		public Assignment getSuffixAssignment_5_1() { return cSuffixAssignment_5_1; }
		
		//Suffix
		public RuleCall getSuffixSuffixParserRuleCall_5_1_0() { return cSuffixSuffixParserRuleCall_5_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class PrefixElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.WebMate.Prefix");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cPrefixAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cPrefixKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCountKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cCountAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cCountEIntParserRuleCall_3_1_0 = (RuleCall)cCountAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cElementNameKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cElementNameAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cElementNameTagParserRuleCall_4_1_0 = (RuleCall)cElementNameAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cElementClassKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cElementClassAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cElementClassClassParserRuleCall_5_1_0 = (RuleCall)cElementClassAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cElementIDKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cElementIDAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cElementIDID0ParserRuleCall_6_1_0 = (RuleCall)cElementIDAssignment_6_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Prefix returns Prefix:
		//    {Prefix}
		//    'Prefix'
		//    '{'
		//        ('count' count=EInt)?
		//        ('elementName' elementName=Tag)?
		//        ('elementClass' elementClass=Class)?
		//        ('elementID' elementID=ID0)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Prefix}
		//'Prefix'
		//'{'
		//    ('count' count=EInt)?
		//    ('elementName' elementName=Tag)?
		//    ('elementClass' elementClass=Class)?
		//    ('elementID' elementID=ID0)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{Prefix}
		public Action getPrefixAction_0() { return cPrefixAction_0; }
		
		//'Prefix'
		public Keyword getPrefixKeyword_1() { return cPrefixKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('count' count=EInt)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'count'
		public Keyword getCountKeyword_3_0() { return cCountKeyword_3_0; }
		
		//count=EInt
		public Assignment getCountAssignment_3_1() { return cCountAssignment_3_1; }
		
		//EInt
		public RuleCall getCountEIntParserRuleCall_3_1_0() { return cCountEIntParserRuleCall_3_1_0; }
		
		//('elementName' elementName=Tag)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'elementName'
		public Keyword getElementNameKeyword_4_0() { return cElementNameKeyword_4_0; }
		
		//elementName=Tag
		public Assignment getElementNameAssignment_4_1() { return cElementNameAssignment_4_1; }
		
		//Tag
		public RuleCall getElementNameTagParserRuleCall_4_1_0() { return cElementNameTagParserRuleCall_4_1_0; }
		
		//('elementClass' elementClass=Class)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'elementClass'
		public Keyword getElementClassKeyword_5_0() { return cElementClassKeyword_5_0; }
		
		//elementClass=Class
		public Assignment getElementClassAssignment_5_1() { return cElementClassAssignment_5_1; }
		
		//Class
		public RuleCall getElementClassClassParserRuleCall_5_1_0() { return cElementClassClassParserRuleCall_5_1_0; }
		
		//('elementID' elementID=ID0)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'elementID'
		public Keyword getElementIDKeyword_6_0() { return cElementIDKeyword_6_0; }
		
		//elementID=ID0
		public Assignment getElementIDAssignment_6_1() { return cElementIDAssignment_6_1; }
		
		//ID0
		public RuleCall getElementIDID0ParserRuleCall_6_1_0() { return cElementIDID0ParserRuleCall_6_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class ElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.WebMate.Element");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cElementAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cElementKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCountKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cCountAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cCountEIntParserRuleCall_3_1_0 = (RuleCall)cCountAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cElementNameKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cElementNameAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cElementNameTagParserRuleCall_4_1_0 = (RuleCall)cElementNameAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cElementClassKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cElementClassAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cElementClassClassParserRuleCall_5_1_0 = (RuleCall)cElementClassAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cElementIDKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cElementIDAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cElementIDID0ParserRuleCall_6_1_0 = (RuleCall)cElementIDAssignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cAttributesKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Assignment cAttributesAssignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
		private final RuleCall cAttributesAttributeParserRuleCall_7_2_0 = (RuleCall)cAttributesAssignment_7_2.eContents().get(0);
		private final Group cGroup_7_3 = (Group)cGroup_7.eContents().get(3);
		private final Keyword cCommaKeyword_7_3_0 = (Keyword)cGroup_7_3.eContents().get(0);
		private final Assignment cAttributesAssignment_7_3_1 = (Assignment)cGroup_7_3.eContents().get(1);
		private final RuleCall cAttributesAttributeParserRuleCall_7_3_1_0 = (RuleCall)cAttributesAssignment_7_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7_4 = (Keyword)cGroup_7.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//Element returns Element:
		//    {Element}
		//    'Element'
		//    '{'
		//        ('count' count=EInt)?
		//        ('elementName' elementName=Tag)?
		//        ('elementClass' elementClass=Class)?
		//        ('elementID' elementID=ID0)?
		//        ('attributes' '{' attributes+=Attribute ( "," attributes+=Attribute)* '}' )?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Element}
		//'Element'
		//'{'
		//    ('count' count=EInt)?
		//    ('elementName' elementName=Tag)?
		//    ('elementClass' elementClass=Class)?
		//    ('elementID' elementID=ID0)?
		//    ('attributes' '{' attributes+=Attribute ( "," attributes+=Attribute)* '}' )?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{Element}
		public Action getElementAction_0() { return cElementAction_0; }
		
		//'Element'
		public Keyword getElementKeyword_1() { return cElementKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('count' count=EInt)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'count'
		public Keyword getCountKeyword_3_0() { return cCountKeyword_3_0; }
		
		//count=EInt
		public Assignment getCountAssignment_3_1() { return cCountAssignment_3_1; }
		
		//EInt
		public RuleCall getCountEIntParserRuleCall_3_1_0() { return cCountEIntParserRuleCall_3_1_0; }
		
		//('elementName' elementName=Tag)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'elementName'
		public Keyword getElementNameKeyword_4_0() { return cElementNameKeyword_4_0; }
		
		//elementName=Tag
		public Assignment getElementNameAssignment_4_1() { return cElementNameAssignment_4_1; }
		
		//Tag
		public RuleCall getElementNameTagParserRuleCall_4_1_0() { return cElementNameTagParserRuleCall_4_1_0; }
		
		//('elementClass' elementClass=Class)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'elementClass'
		public Keyword getElementClassKeyword_5_0() { return cElementClassKeyword_5_0; }
		
		//elementClass=Class
		public Assignment getElementClassAssignment_5_1() { return cElementClassAssignment_5_1; }
		
		//Class
		public RuleCall getElementClassClassParserRuleCall_5_1_0() { return cElementClassClassParserRuleCall_5_1_0; }
		
		//('elementID' elementID=ID0)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'elementID'
		public Keyword getElementIDKeyword_6_0() { return cElementIDKeyword_6_0; }
		
		//elementID=ID0
		public Assignment getElementIDAssignment_6_1() { return cElementIDAssignment_6_1; }
		
		//ID0
		public RuleCall getElementIDID0ParserRuleCall_6_1_0() { return cElementIDID0ParserRuleCall_6_1_0; }
		
		//('attributes' '{' attributes+=Attribute ( "," attributes+=Attribute)* '}' )?
		public Group getGroup_7() { return cGroup_7; }
		
		//'attributes'
		public Keyword getAttributesKeyword_7_0() { return cAttributesKeyword_7_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_7_1() { return cLeftCurlyBracketKeyword_7_1; }
		
		//attributes+=Attribute
		public Assignment getAttributesAssignment_7_2() { return cAttributesAssignment_7_2; }
		
		//Attribute
		public RuleCall getAttributesAttributeParserRuleCall_7_2_0() { return cAttributesAttributeParserRuleCall_7_2_0; }
		
		//( "," attributes+=Attribute)*
		public Group getGroup_7_3() { return cGroup_7_3; }
		
		//","
		public Keyword getCommaKeyword_7_3_0() { return cCommaKeyword_7_3_0; }
		
		//attributes+=Attribute
		public Assignment getAttributesAssignment_7_3_1() { return cAttributesAssignment_7_3_1; }
		
		//Attribute
		public RuleCall getAttributesAttributeParserRuleCall_7_3_1_0() { return cAttributesAttributeParserRuleCall_7_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7_4() { return cRightCurlyBracketKeyword_7_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}
	public class SuffixElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.WebMate.Suffix");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSuffixAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cSuffixKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cTextKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cTextAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cTextEStringParserRuleCall_3_1_0 = (RuleCall)cTextAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cElementNameKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cElementNameAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cElementNameTagParserRuleCall_4_1_0 = (RuleCall)cElementNameAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cElementClassKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cElementClassAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cElementClassClassParserRuleCall_5_1_0 = (RuleCall)cElementClassAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cElementIDKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cElementIDAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cElementIDID0ParserRuleCall_6_1_0 = (RuleCall)cElementIDAssignment_6_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Suffix returns Suffix:
		//    {Suffix}
		//    'Suffix'
		//    '{'
		//        ('text' text=EString)?
		//        ('elementName' elementName=Tag)?
		//        ('elementClass' elementClass=Class)?
		//        ('elementID' elementID=ID0)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Suffix}
		//'Suffix'
		//'{'
		//    ('text' text=EString)?
		//    ('elementName' elementName=Tag)?
		//    ('elementClass' elementClass=Class)?
		//    ('elementID' elementID=ID0)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{Suffix}
		public Action getSuffixAction_0() { return cSuffixAction_0; }
		
		//'Suffix'
		public Keyword getSuffixKeyword_1() { return cSuffixKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('text' text=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'text'
		public Keyword getTextKeyword_3_0() { return cTextKeyword_3_0; }
		
		//text=EString
		public Assignment getTextAssignment_3_1() { return cTextAssignment_3_1; }
		
		//EString
		public RuleCall getTextEStringParserRuleCall_3_1_0() { return cTextEStringParserRuleCall_3_1_0; }
		
		//('elementName' elementName=Tag)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'elementName'
		public Keyword getElementNameKeyword_4_0() { return cElementNameKeyword_4_0; }
		
		//elementName=Tag
		public Assignment getElementNameAssignment_4_1() { return cElementNameAssignment_4_1; }
		
		//Tag
		public RuleCall getElementNameTagParserRuleCall_4_1_0() { return cElementNameTagParserRuleCall_4_1_0; }
		
		//('elementClass' elementClass=Class)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'elementClass'
		public Keyword getElementClassKeyword_5_0() { return cElementClassKeyword_5_0; }
		
		//elementClass=Class
		public Assignment getElementClassAssignment_5_1() { return cElementClassAssignment_5_1; }
		
		//Class
		public RuleCall getElementClassClassParserRuleCall_5_1_0() { return cElementClassClassParserRuleCall_5_1_0; }
		
		//('elementID' elementID=ID0)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'elementID'
		public Keyword getElementIDKeyword_6_0() { return cElementIDKeyword_6_0; }
		
		//elementID=ID0
		public Assignment getElementIDAssignment_6_1() { return cElementIDAssignment_6_1; }
		
		//ID0
		public RuleCall getElementIDID0ParserRuleCall_6_1_0() { return cElementIDID0ParserRuleCall_6_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class EIntElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.WebMate.EInt");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//EInt returns ecore::EInt:
		//    '-'? INT;
		@Override public ParserRule getRule() { return rule; }
		
		//'-'? INT
		public Group getGroup() { return cGroup; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
	}
	public class TagElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.WebMate.Tag");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTagAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cTagKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cTagNameKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cTagNameAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cTagNameEStringParserRuleCall_3_1_0 = (RuleCall)cTagNameAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Tag returns Tag:
		//    {Tag}
		//    'Tag'
		//    '{'
		//        ('tagName' tagName=EString)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Tag}
		//'Tag'
		//'{'
		//    ('tagName' tagName=EString)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{Tag}
		public Action getTagAction_0() { return cTagAction_0; }
		
		//'Tag'
		public Keyword getTagKeyword_1() { return cTagKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('tagName' tagName=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'tagName'
		public Keyword getTagNameKeyword_3_0() { return cTagNameKeyword_3_0; }
		
		//tagName=EString
		public Assignment getTagNameAssignment_3_1() { return cTagNameAssignment_3_1; }
		
		//EString
		public RuleCall getTagNameEStringParserRuleCall_3_1_0() { return cTagNameEStringParserRuleCall_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class ClassElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.WebMate.Class");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cClassAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cClassKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cClassNameKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cClassNameAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cClassNameEStringParserRuleCall_3_1_0 = (RuleCall)cClassNameAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Class returns Class:
		//    {Class}
		//    'Class'
		//    '{'
		//        ('className' className=EString)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Class}
		//'Class'
		//'{'
		//    ('className' className=EString)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{Class}
		public Action getClassAction_0() { return cClassAction_0; }
		
		//'Class'
		public Keyword getClassKeyword_1() { return cClassKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('className' className=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'className'
		public Keyword getClassNameKeyword_3_0() { return cClassNameKeyword_3_0; }
		
		//className=EString
		public Assignment getClassNameAssignment_3_1() { return cClassNameAssignment_3_1; }
		
		//EString
		public RuleCall getClassNameEStringParserRuleCall_3_1_0() { return cClassNameEStringParserRuleCall_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class ID0Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.WebMate.ID0");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cIDAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cIDKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cIdNameKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cIdNameAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cIdNameEStringParserRuleCall_3_1_0 = (RuleCall)cIdNameAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//ID0 returns ID:
		//    {ID}
		//    'ID'
		//    '{'
		//        ('idName' idName=EString)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{ID}
		//'ID'
		//'{'
		//    ('idName' idName=EString)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{ID}
		public Action getIDAction_0() { return cIDAction_0; }
		
		//'ID'
		public Keyword getIDKeyword_1() { return cIDKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('idName' idName=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'idName'
		public Keyword getIdNameKeyword_3_0() { return cIdNameKeyword_3_0; }
		
		//idName=EString
		public Assignment getIdNameAssignment_3_1() { return cIdNameAssignment_3_1; }
		
		//EString
		public RuleCall getIdNameEStringParserRuleCall_3_1_0() { return cIdNameEStringParserRuleCall_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.WebMate.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString returns ecore::EString:
		//    STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	public class AttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.WebMate.Attribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cAttributeAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cAttributeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cAttributeNameKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cAttributeNameAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cAttributeNameEStringParserRuleCall_3_1_0 = (RuleCall)cAttributeNameAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cAttributeValueKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cAttributeValueAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cAttributeValueEStringParserRuleCall_4_1_0 = (RuleCall)cAttributeValueAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Attribute returns Attribute:
		//    {Attribute}
		//    'Attribute'
		//    '{'
		//        ('attributeName' attributeName=EString)?
		//        ('attributeValue' attributeValue=EString)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Attribute}
		//'Attribute'
		//'{'
		//    ('attributeName' attributeName=EString)?
		//    ('attributeValue' attributeValue=EString)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{Attribute}
		public Action getAttributeAction_0() { return cAttributeAction_0; }
		
		//'Attribute'
		public Keyword getAttributeKeyword_1() { return cAttributeKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('attributeName' attributeName=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'attributeName'
		public Keyword getAttributeNameKeyword_3_0() { return cAttributeNameKeyword_3_0; }
		
		//attributeName=EString
		public Assignment getAttributeNameAssignment_3_1() { return cAttributeNameAssignment_3_1; }
		
		//EString
		public RuleCall getAttributeNameEStringParserRuleCall_3_1_0() { return cAttributeNameEStringParserRuleCall_3_1_0; }
		
		//('attributeValue' attributeValue=EString)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'attributeValue'
		public Keyword getAttributeValueKeyword_4_0() { return cAttributeValueKeyword_4_0; }
		
		//attributeValue=EString
		public Assignment getAttributeValueAssignment_4_1() { return cAttributeValueAssignment_4_1; }
		
		//EString
		public RuleCall getAttributeValueEStringParserRuleCall_4_1_0() { return cAttributeValueEStringParserRuleCall_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	
	
	private final EmmetElements pEmmet;
	private final AbbreviationElements pAbbreviation;
	private final PrefixElements pPrefix;
	private final ElementElements pElement;
	private final SuffixElements pSuffix;
	private final EIntElements pEInt;
	private final TagElements pTag;
	private final ClassElements pClass;
	private final ID0Elements pID0;
	private final EStringElements pEString;
	private final AttributeElements pAttribute;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public WebMateGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pEmmet = new EmmetElements();
		this.pAbbreviation = new AbbreviationElements();
		this.pPrefix = new PrefixElements();
		this.pElement = new ElementElements();
		this.pSuffix = new SuffixElements();
		this.pEInt = new EIntElements();
		this.pTag = new TagElements();
		this.pClass = new ClassElements();
		this.pID0 = new ID0Elements();
		this.pEString = new EStringElements();
		this.pAttribute = new AttributeElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.example.mydsl.WebMate".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Emmet returns Emmet:
	//    'Emmet'
	//    '{'
	//        'abbreviation' '{' abbreviation+=Abbreviation ( "," abbreviation+=Abbreviation)* '}'
	//    '}';
	public EmmetElements getEmmetAccess() {
		return pEmmet;
	}
	
	public ParserRule getEmmetRule() {
		return getEmmetAccess().getRule();
	}
	
	//Abbreviation returns Abbreviation:
	//    {Abbreviation}
	//    'Abbreviation'
	//    '{'
	//        ('prefix' prefix=Prefix)?
	//        ('element' '{' element+=Element ( "," element+=Element)* '}' )?
	//        ('suffix' suffix=Suffix)?
	//    '}';
	public AbbreviationElements getAbbreviationAccess() {
		return pAbbreviation;
	}
	
	public ParserRule getAbbreviationRule() {
		return getAbbreviationAccess().getRule();
	}
	
	//Prefix returns Prefix:
	//    {Prefix}
	//    'Prefix'
	//    '{'
	//        ('count' count=EInt)?
	//        ('elementName' elementName=Tag)?
	//        ('elementClass' elementClass=Class)?
	//        ('elementID' elementID=ID0)?
	//    '}';
	public PrefixElements getPrefixAccess() {
		return pPrefix;
	}
	
	public ParserRule getPrefixRule() {
		return getPrefixAccess().getRule();
	}
	
	//Element returns Element:
	//    {Element}
	//    'Element'
	//    '{'
	//        ('count' count=EInt)?
	//        ('elementName' elementName=Tag)?
	//        ('elementClass' elementClass=Class)?
	//        ('elementID' elementID=ID0)?
	//        ('attributes' '{' attributes+=Attribute ( "," attributes+=Attribute)* '}' )?
	//    '}';
	public ElementElements getElementAccess() {
		return pElement;
	}
	
	public ParserRule getElementRule() {
		return getElementAccess().getRule();
	}
	
	//Suffix returns Suffix:
	//    {Suffix}
	//    'Suffix'
	//    '{'
	//        ('text' text=EString)?
	//        ('elementName' elementName=Tag)?
	//        ('elementClass' elementClass=Class)?
	//        ('elementID' elementID=ID0)?
	//    '}';
	public SuffixElements getSuffixAccess() {
		return pSuffix;
	}
	
	public ParserRule getSuffixRule() {
		return getSuffixAccess().getRule();
	}
	
	//EInt returns ecore::EInt:
	//    '-'? INT;
	public EIntElements getEIntAccess() {
		return pEInt;
	}
	
	public ParserRule getEIntRule() {
		return getEIntAccess().getRule();
	}
	
	//Tag returns Tag:
	//    {Tag}
	//    'Tag'
	//    '{'
	//        ('tagName' tagName=EString)?
	//    '}';
	public TagElements getTagAccess() {
		return pTag;
	}
	
	public ParserRule getTagRule() {
		return getTagAccess().getRule();
	}
	
	//Class returns Class:
	//    {Class}
	//    'Class'
	//    '{'
	//        ('className' className=EString)?
	//    '}';
	public ClassElements getClassAccess() {
		return pClass;
	}
	
	public ParserRule getClassRule() {
		return getClassAccess().getRule();
	}
	
	//ID0 returns ID:
	//    {ID}
	//    'ID'
	//    '{'
	//        ('idName' idName=EString)?
	//    '}';
	public ID0Elements getID0Access() {
		return pID0;
	}
	
	public ParserRule getID0Rule() {
		return getID0Access().getRule();
	}
	
	//EString returns ecore::EString:
	//    STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//Attribute returns Attribute:
	//    {Attribute}
	//    'Attribute'
	//    '{'
	//        ('attributeName' attributeName=EString)?
	//        ('attributeValue' attributeValue=EString)?
	//    '}';
	public AttributeElements getAttributeAccess() {
		return pAttribute;
	}
	
	public ParserRule getAttributeRule() {
		return getAttributeAccess().getRule();
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
