/**
 * generated by Xtext 2.30.0
 */
package org.xtext.example.mydsl.formatting2;

import com.google.inject.Inject;
import java.util.Arrays;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.formatting2.AbstractFormatter2;
import org.eclipse.xtext.formatting2.IFormattableDocument;
import org.eclipse.xtext.resource.XtextResource;
import org.eclipse.xtext.xbase.lib.Extension;
import org.xtext.example.mydsl.services.WebMateGrammarAccess;
import webmate.Abbreviation;
import webmate.Attribute;
import webmate.Group;
import webmate.HTML;
import webmate.ID;
import webmate.Symbol;
import webmate.Tag;

@SuppressWarnings("all")
public class WebMateFormatter extends AbstractFormatter2 {
  @Inject
  @Extension
  private WebMateGrammarAccess _webMateGrammarAccess;

  protected void _format(final HTML hTML, @Extension final IFormattableDocument document) {
    EList<Abbreviation> _abbreviation = hTML.getAbbreviation();
    for (final Abbreviation abbreviation : _abbreviation) {
      document.<Abbreviation>format(abbreviation);
    }
  }

  protected void _format(final Abbreviation abbreviation, @Extension final IFormattableDocument document) {
    document.<ID>format(abbreviation.getIds());
    EList<Symbol> _symbols = abbreviation.getSymbols();
    for (final Symbol symbol : _symbols) {
      document.<Symbol>format(symbol);
    }
    EList<Tag> _tags = abbreviation.getTags();
    for (final Tag tag : _tags) {
      document.<Tag>format(tag);
    }
    EList<webmate.Class> _classes = abbreviation.getClasses();
    for (final webmate.Class _class : _classes) {
      document.<webmate.Class>format(_class);
    }
    EList<Attribute> _attributes = abbreviation.getAttributes();
    for (final Attribute attribute : _attributes) {
      document.<Attribute>format(attribute);
    }
    EList<Group> _group = abbreviation.getGroup();
    for (final Group group : _group) {
      document.<Group>format(group);
    }
  }

  public void format(final Object abbreviation, final IFormattableDocument document) {
    if (abbreviation instanceof XtextResource) {
      _format((XtextResource)abbreviation, document);
      return;
    } else if (abbreviation instanceof Abbreviation) {
      _format((Abbreviation)abbreviation, document);
      return;
    } else if (abbreviation instanceof HTML) {
      _format((HTML)abbreviation, document);
      return;
    } else if (abbreviation instanceof EObject) {
      _format((EObject)abbreviation, document);
      return;
    } else if (abbreviation == null) {
      _format((Void)null, document);
      return;
    } else if (abbreviation != null) {
      _format(abbreviation, document);
      return;
    } else {
      throw new IllegalArgumentException("Unhandled parameter types: " +
        Arrays.<Object>asList(abbreviation, document).toString());
    }
  }
}
